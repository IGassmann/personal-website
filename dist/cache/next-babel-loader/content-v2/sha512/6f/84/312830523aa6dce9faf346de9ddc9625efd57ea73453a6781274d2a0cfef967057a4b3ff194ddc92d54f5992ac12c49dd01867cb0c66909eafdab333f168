{"ast":null,"code":"var _jsxFileName = \"/Users/IGassmann/Developer/IGassmann/personal-website/src/pages/post/[postSlug].js\";\nvar __jsx = React.createElement;\nimport { BlogHomeButton } from '@/components/BlogHomeButton/BlogHomeButton';\nimport Layout from '@/components/Layout';\nimport Post from '@/components/Post';\nimport { getAllPosts, getPostBySlug } from '@/lib/api';\nimport React from 'react'; // noinspection JSUnusedGlobalSymbols\n\nexport default function PostPage({\n  siteTitle,\n  siteSubtitle,\n  post\n}) {\n  const metaDescription = post.description !== null ? post.description : siteSubtitle;\n  return __jsx(Layout, {\n    isSingleColumn: true,\n    title: `${post.title} - ${siteTitle}`,\n    description: metaDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(BlogHomeButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), __jsx(Post, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n} // noinspection JSUnusedGlobalSymbols\n\nexport async function getStaticProps({\n  params: {\n    postSlug\n  }\n}) {\n  const {\n    default: {\n      title,\n      description\n    }\n  } = await import('@/site.config');\n  const post = await getPostBySlug(postSlug, ['title', 'description', 'publishedAt', 'content', 'tags', 'tagSlugs', 'slug']);\n  return {\n    props: {\n      siteTitle: title,\n      siteSubtitle: description,\n      post: post\n    }\n  };\n} // noinspection JSUnusedGlobalSymbols\n\nexport async function getStaticPaths() {\n  const posts = getAllPosts(['slug']);\n  return {\n    paths: posts.map(({\n      slug\n    }) => ({\n      params: {\n        postSlug: slug\n      }\n    })),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/IGassmann/Developer/IGassmann/personal-website/src/pages/post/[postSlug].js"],"names":["BlogHomeButton","Layout","Post","getAllPosts","getPostBySlug","React","PostPage","siteTitle","siteSubtitle","post","metaDescription","description","title","getStaticProps","params","postSlug","default","props","getStaticPaths","posts","paths","map","slug","fallback"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,4CAA/B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,WAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA,SAAD;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA;AAA1B,CAAlB,EAAoD;AACjE,QAAMC,eAAe,GAAGD,IAAI,CAACE,WAAL,KAAqB,IAArB,GAA4BF,IAAI,CAACE,WAAjC,GAA+CH,YAAvE;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,cAAc,MAAtB;AAAuB,IAAA,KAAK,EAAG,GAAGC,IAAI,CAACG,KAAO,MAAKL,SAAU,EAA7D;AAAgE,IAAA,WAAW,EAAEG,eAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAED,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,C,CAED;;AACA,OAAO,eAAeI,cAAf,CAA8B;AAAEC,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF;AAAV,CAA9B,EAAwD;AAC7D,QAAM;AAAEC,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASD,MAAAA;AAAT;AAAX,MAAsC,MAAM,OAAO,eAAP,CAAlD;AAEA,QAAMF,IAAI,GAAG,MAAML,aAAa,CAACW,QAAD,EAAW,CACzC,OADyC,EAEzC,aAFyC,EAGzC,aAHyC,EAIzC,SAJyC,EAKzC,MALyC,EAMzC,UANyC,EAOzC,MAPyC,CAAX,CAAhC;AAUA,SAAO;AACLE,IAAAA,KAAK,EAAE;AACLV,MAAAA,SAAS,EAAEK,KADN;AAELJ,MAAAA,YAAY,EAAEG,WAFT;AAGLF,MAAAA,IAAI,EAAEA;AAHD;AADF,GAAP;AAOD,C,CAED;;AACA,OAAO,eAAeS,cAAf,GAAgC;AACrC,QAAMC,KAAK,GAAGhB,WAAW,CAAC,CAAC,MAAD,CAAD,CAAzB;AAEA,SAAO;AACLiB,IAAAA,KAAK,EAAED,KAAK,CAACE,GAAN,CAAU,CAAC;AAAEC,MAAAA;AAAF,KAAD,MAAe;AAC9BR,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEO;AADJ;AADsB,KAAf,CAAV,CADF;AAMLC,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD","sourcesContent":["import { BlogHomeButton } from '@/components/BlogHomeButton/BlogHomeButton';\nimport Layout from '@/components/Layout';\nimport Post from '@/components/Post';\nimport { getAllPosts, getPostBySlug } from '@/lib/api';\nimport React from 'react';\n\n// noinspection JSUnusedGlobalSymbols\nexport default function PostPage({siteTitle, siteSubtitle, post }) {\n  const metaDescription = post.description !== null ? post.description : siteSubtitle;\n\n  return (\n    <Layout isSingleColumn title={`${(post.title)} - ${siteTitle}`} description={metaDescription}>\n      <BlogHomeButton/>\n      <Post post={post} />\n    </Layout>\n  );\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport async function getStaticProps({ params: { postSlug } }) {\n  const { default: { title, description } } = await import('@/site.config')\n\n  const post = await getPostBySlug(postSlug, [\n    'title',\n    'description',\n    'publishedAt',\n    'content',\n    'tags',\n    'tagSlugs',\n    'slug',\n  ]);\n\n  return {\n    props: {\n      siteTitle: title,\n      siteSubtitle: description,\n      post: post,\n    },\n  };\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport async function getStaticPaths() {\n  const posts = getAllPosts(['slug']);\n\n  return {\n    paths: posts.map(({ slug }) => ({\n      params: {\n        postSlug: slug,\n      },\n    })),\n    fallback: false,\n  };\n}"]},"metadata":{},"sourceType":"module"}