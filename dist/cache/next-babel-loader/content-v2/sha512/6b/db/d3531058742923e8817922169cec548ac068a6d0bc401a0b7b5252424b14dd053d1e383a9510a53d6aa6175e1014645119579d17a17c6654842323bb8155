{"ast":null,"code":"var _jsxFileName = \"/Users/IGassmann/Developer/IGassmann/personal-website/src/pages/blog.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { getAllPosts } from '@/lib/api';\nimport PostFeed from '@/components/Feed';\nimport Layout from '@/components/Layout';\nimport Pagination from '@/components/Pagination';\nexport default function Blog({\n  siteTitle,\n  siteSubtitle,\n  postsPerPage,\n  posts\n}) {\n  const currentPage = 0;\n  const hasNextPage = true;\n  const hasPrevPage = false;\n  const prevPagePath = '/';\n  const nextPagePath = 'page/1';\n  const numberOfPages = Math.ceil(posts.length / postsPerPage);\n  let pages = [];\n\n  for (let index = 1; index <= numberOfPages; index++) {\n    pages.push({\n      params: {\n        page_index: index.toString()\n      }\n    });\n  }\n\n  const pageTitle = currentPage > 0 ? `Posts - Page ${currentPage} - ${siteTitle}` : siteTitle;\n  return __jsx(Layout, {\n    pageTitle: pageTitle,\n    pageDescription: siteSubtitle,\n    isIndex: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(PostFeed, {\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), __jsx(Pagination, {\n    prevPagePath: prevPagePath,\n    nextPagePath: nextPagePath,\n    hasPrevPage: hasPrevPage,\n    hasNextPage: hasNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}\nexport async function getStaticProps() {\n  const {\n    default: {\n      title,\n      description,\n      postsPerPage\n    }\n  } = await import('@/site.config');\n  const posts = getAllPosts(['title', 'description', 'category', 'publishedAt', 'slug']);\n  return {\n    props: {\n      posts,\n      siteTitle: title,\n      siteSubtitle: description,\n      postsPerPage\n    }\n  };\n}","map":{"version":3,"sources":["/Users/IGassmann/Developer/IGassmann/personal-website/src/pages/blog.js"],"names":["React","getAllPosts","PostFeed","Layout","Pagination","Blog","siteTitle","siteSubtitle","postsPerPage","posts","currentPage","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","numberOfPages","Math","ceil","length","pages","index","push","params","page_index","toString","pageTitle","getStaticProps","default","title","description","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,YAAb;AAA2BC,EAAAA,YAA3B;AAAyCC,EAAAA;AAAzC,CAAd,EAAgE;AAE7E,QAAMC,WAAW,GAAG,CAApB;AACA,QAAMC,WAAW,GAAG,IAApB;AACA,QAAMC,WAAW,GAAG,KAApB;AACA,QAAMC,YAAY,GAAG,GAArB;AACA,QAAMC,YAAY,GAAG,QAArB;AAEA,QAAMC,aAAa,GAAGC,IAAI,CAACC,IAAL,CAAUR,KAAK,CAACS,MAAN,GAAeV,YAAzB,CAAtB;AAEA,MAAIW,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAIL,aAA7B,EAA4CK,KAAK,EAAjD,EAAqD;AACnDD,IAAAA,KAAK,CAACE,IAAN,CAAW;AACTC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,UAAU,EAAEH,KAAK,CAACI,QAAN;AAAd;AADC,KAAX;AAGD;;AAGD,QAAMC,SAAS,GAAGf,WAAW,GAAG,CAAd,GAAmB,gBAAeA,WAAY,MAAKJ,SAAU,EAA7D,GAAiEA,SAAnF;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEmB,SAAnB;AAA8B,IAAA,eAAe,EAAElB,YAA/C;AAA6D,IAAA,OAAO,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AACE,IAAA,YAAY,EAAEI,YADhB;AAEE,IAAA,YAAY,EAAEC,YAFhB;AAGE,IAAA,WAAW,EAAEF,WAHf;AAIE,IAAA,WAAW,EAAED,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD;AAED,OAAO,eAAee,cAAf,GAAgC;AACrC,QAAM;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBrB,MAAAA;AAAtB;AAAX,MAAoD,MAAM,OAAO,eAAP,CAAhE;AAEA,QAAMC,KAAK,GAAGR,WAAW,CAAC,CACxB,OADwB,EAExB,aAFwB,EAGxB,UAHwB,EAIxB,aAJwB,EAKxB,MALwB,CAAD,CAAzB;AAQA,SAAO;AACL6B,IAAAA,KAAK,EAAE;AACLrB,MAAAA,KADK;AAELH,MAAAA,SAAS,EAAEsB,KAFN;AAGLrB,MAAAA,YAAY,EAAEsB,WAHT;AAILrB,MAAAA;AAJK;AADF,GAAP;AAQD","sourcesContent":["import React from 'react';\nimport { getAllPosts } from '@/lib/api';\nimport PostFeed from '@/components/Feed';\nimport Layout from '@/components/Layout';\nimport Pagination from '@/components/Pagination';\n\nexport default function Blog({ siteTitle, siteSubtitle, postsPerPage, posts }) {\n\n  const currentPage = 0;\n  const hasNextPage = true;\n  const hasPrevPage = false;\n  const prevPagePath = '/';\n  const nextPagePath = 'page/1';\n\n  const numberOfPages = Math.ceil(posts.length / postsPerPage)\n\n  let pages = []\n  for (let index = 1; index <= numberOfPages; index++) {\n    pages.push({\n      params: { page_index: index.toString() },\n    })\n  }\n\n\n  const pageTitle = currentPage > 0 ? `Posts - Page ${currentPage} - ${siteTitle}` : siteTitle;\n\n  return (\n    <Layout pageTitle={pageTitle} pageDescription={siteSubtitle} isIndex>\n      <PostFeed posts={posts} />\n      <Pagination\n        prevPagePath={prevPagePath}\n        nextPagePath={nextPagePath}\n        hasPrevPage={hasPrevPage}\n        hasNextPage={hasNextPage}\n      />\n    </Layout>\n  );\n}\n\nexport async function getStaticProps() {\n  const { default: { title, description, postsPerPage } } = await import('@/site.config')\n\n  const posts = getAllPosts([\n    'title',\n    'description',\n    'category',\n    'publishedAt',\n    'slug',\n  ]);\n\n  return {\n    props: {\n      posts,\n      siteTitle: title,\n      siteSubtitle: description,\n      postsPerPage,\n    },\n  };\n}"]},"metadata":{},"sourceType":"module"}