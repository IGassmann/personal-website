{"ast":null,"code":"var _jsxFileName = \"/Users/IGassmann/Developer/IGassmann/personal-website/src/pages/category/[categorySlug].js\";\nvar __jsx = React.createElement;\nimport PostFeed from '@/components/Feed';\nimport Layout from '@/components/Layout';\nimport Pagination from '@/components/Pagination';\nimport { getAllCategories, getPostsByCategorySlug } from '@/lib/api';\nimport React from 'react';\n\nconst CategoryPage = ({\n  siteTitle,\n  siteSubtitle,\n  category,\n  posts,\n  currentPage,\n  numberOfPages\n}) => {\n  let pageTitle;\n\n  if (currentPage > 0) {\n    pageTitle = `${category} - Page ${currentPage} - ${siteTitle}`;\n  } else {\n    pageTitle = `${category} - ${siteTitle}`;\n  }\n\n  return __jsx(Layout, {\n    pageTitle: pageTitle,\n    pageDescription: siteSubtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(PostFeed, {\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), __jsx(Pagination, {\n    currentPage: currentPage,\n    numberOfPages: numberOfPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CategoryPage;\nexport async function getStaticProps({\n  params: {\n    categorySlug\n  }\n}) {\n  const {\n    default: {\n      title,\n      description\n    }\n  } = await import('@/site.config');\n  const posts = getPostsByCategorySlug(categorySlug, ['title', 'description', 'category', 'publishedAt', 'slug']);\n  return {\n    props: {\n      siteTitle: title,\n      siteSubtitle: description,\n      posts\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const categories = getAllCategories();\n  return {\n    paths: categories.map(category => ({\n      params: {\n        categorySlug: category\n      }\n    })),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/IGassmann/Developer/IGassmann/personal-website/src/pages/category/[categorySlug].js"],"names":["PostFeed","Layout","Pagination","getAllCategories","getPostsByCategorySlug","React","CategoryPage","siteTitle","siteSubtitle","category","posts","currentPage","numberOfPages","pageTitle","getStaticProps","params","categorySlug","default","title","description","props","getStaticPaths","categories","paths","map","fallback"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,gBAAT,EAA2BC,sBAA3B,QAAyD,WAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,YAAb;AAA2BC,EAAAA,QAA3B;AAAqCC,EAAAA,KAArC;AAA4CC,EAAAA,WAA5C;AAAyDC,EAAAA;AAAzD,CAAD,KAA8E;AACjG,MAAIC,SAAJ;;AACA,MAAIF,WAAW,GAAG,CAAlB,EAAqB;AACnBE,IAAAA,SAAS,GAAI,GAAEJ,QAAS,WAAUE,WAAY,MAAKJ,SAAU,EAA7D;AACD,GAFD,MAEO;AACLM,IAAAA,SAAS,GAAI,GAAEJ,QAAS,MAAKF,SAAU,EAAvC;AACD;;AAED,SACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEM,SAAnB;AAA8B,IAAA,eAAe,EAAEL,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AACE,IAAA,WAAW,EAAEC,WADf;AAEE,IAAA,aAAa,EAAEC,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AASD,CAjBD;;AAmBA,eAAeN,YAAf;AAEA,OAAO,eAAeQ,cAAf,CAA8B;AAAEC,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF;AAAV,CAA9B,EAA4D;AACjE,QAAM;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAX,MAAsC,MAAM,OAAO,eAAP,CAAlD;AAEA,QAAMT,KAAK,GAAGN,sBAAsB,CAACY,YAAD,EAAe,CACjD,OADiD,EAEjD,aAFiD,EAGjD,UAHiD,EAIjD,aAJiD,EAKjD,MALiD,CAAf,CAApC;AAQA,SAAO;AACLI,IAAAA,KAAK,EAAE;AACLb,MAAAA,SAAS,EAAEW,KADN;AAELV,MAAAA,YAAY,EAAEW,WAFT;AAGLT,MAAAA;AAHK;AADF,GAAP;AAOD;AAED,OAAO,eAAeW,cAAf,GAAgC;AACrC,QAAMC,UAAU,GAAGnB,gBAAgB,EAAnC;AAEA,SAAO;AACLoB,IAAAA,KAAK,EAAED,UAAU,CAACE,GAAX,CAAef,QAAQ,KAAK;AACjCM,MAAAA,MAAM,EAAE;AACNC,QAAAA,YAAY,EAAEP;AADR;AADyB,KAAL,CAAvB,CADF;AAMLgB,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD","sourcesContent":["import PostFeed from '@/components/Feed';\nimport Layout from '@/components/Layout';\nimport Pagination from '@/components/Pagination';\nimport { getAllCategories, getPostsByCategorySlug } from '@/lib/api';\nimport React from 'react';\n\nconst CategoryPage = ({ siteTitle, siteSubtitle, category, posts, currentPage, numberOfPages }) => {\n  let pageTitle;\n  if (currentPage > 0) {\n    pageTitle = `${category} - Page ${currentPage} - ${siteTitle}`;\n  } else {\n    pageTitle = `${category} - ${siteTitle}`;\n  }\n\n  return (\n    <Layout pageTitle={pageTitle} pageDescription={siteSubtitle}>\n      <PostFeed posts={posts} />\n      <Pagination\n        currentPage={currentPage}\n        numberOfPages={numberOfPages}\n      />\n    </Layout>\n  );\n};\n\nexport default CategoryPage;\n\nexport async function getStaticProps({ params: { categorySlug } }) {\n  const { default: { title, description } } = await import('@/site.config')\n\n  const posts = getPostsByCategorySlug(categorySlug, [\n    'title',\n    'description',\n    'category',\n    'publishedAt',\n    'slug',\n  ]);\n\n  return {\n    props: {\n      siteTitle: title,\n      siteSubtitle: description,\n      posts,\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const categories = getAllCategories();\n\n  return {\n    paths: categories.map(category => ({\n      params: {\n        categorySlug: category,\n      },\n    })),\n    fallback: false,\n  };\n}"]},"metadata":{},"sourceType":"module"}