{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n\nvar useMediaQuery = function useMediaQuery(query) {\n  _s();\n\n  var _useState = useState(false),\n      matches = _useState[0],\n      setMatches = _useState[1];\n\n  useEffect(function () {\n    var mediaQueryList = window.matchMedia(query);\n\n    var handleWidthChange = function handleWidthChange(event) {\n      setMatches(event.matches);\n    };\n\n    handleWidthChange(mediaQueryList);\n    mediaQueryList.addEventListener('change', handleWidthChange);\n    return function () {\n      return mediaQueryList.removeEventListener('change', handleWidthChange);\n    };\n  }, [matches, query]);\n  return matches;\n};\n\n_s(useMediaQuery, \"/aV7jSECvYA0Ea4uAEPK2AzROhs=\");\n\nexport default useMediaQuery;","map":{"version":3,"sources":["/Users/IGassmann/Developer/IGassmann/personal-website/src/hooks/use-media-query.js"],"names":["useEffect","useState","useMediaQuery","query","matches","setMatches","mediaQueryList","window","matchMedia","handleWidthChange","event","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACDF,QAAQ,CAAC,KAAD,CADP;AAAA,MACxBG,OADwB;AAAA,MACfC,UADe;;AAG/BL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMM,cAAc,GAAGC,MAAM,CAACC,UAAP,CAAkBL,KAAlB,CAAvB;;AAEA,QAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnCL,MAAAA,UAAU,CAACK,KAAK,CAACN,OAAP,CAAV;AACD,KAFD;;AAIAK,IAAAA,iBAAiB,CAACH,cAAD,CAAjB;AAEAA,IAAAA,cAAc,CAACK,gBAAf,CAAgC,QAAhC,EAAyCF,iBAAzC;AAEA,WAAO;AAAA,aAAMH,cAAc,CAACM,mBAAf,CAAmC,QAAnC,EAA6CH,iBAA7C,CAAN;AAAA,KAAP;AACD,GAZQ,EAYN,CAACL,OAAD,EAAUD,KAAV,CAZM,CAAT;AAcA,SAAOC,OAAP;AACD,CAlBD;;GAAMF,a;;AAoBN,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useMediaQuery = (query) => {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const mediaQueryList = window.matchMedia(query);\n\n    const handleWidthChange = (event) => {\n      setMatches(event.matches);\n    };\n\n    handleWidthChange(mediaQueryList);\n\n    mediaQueryList.addEventListener('change',handleWidthChange);\n\n    return () => mediaQueryList.removeEventListener('change', handleWidthChange);\n  }, [matches, query]);\n\n  return matches;\n};\n\nexport default useMediaQuery;"]},"metadata":{},"sourceType":"module"}