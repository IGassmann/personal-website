{"ast":null,"code":"var _jsxFileName = \"/Users/IGassmann/Developer/IGassmann/personal-website/src/pages/about.js\";\nvar __jsx = React.createElement;\nimport * as matter from 'gray-matter';\nimport { join } from 'path';\nimport React from 'react';\nimport fs from 'fs';\nimport Layout from '@/components/Layout';\nimport renderToString from 'next-mdx-remote/render-to-string';\nimport hydrate from 'next-mdx-remote/hydrate';\n\nconst AboutPage = ({\n  siteTitle,\n  siteSubtitle,\n  aboutTitle,\n  aboutDescription,\n  mdxSource\n}) => {\n  const content = hydrate(mdxSource);\n  const metaDescription = aboutDescription !== null && aboutDescription !== void 0 ? aboutDescription : siteSubtitle;\n  return __jsx(Layout, {\n    pageTitle: `${aboutTitle} - ${siteTitle}`,\n    pageDescription: metaDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, content);\n};\n\nexport default AboutPage; // noinspection JSUnusedGlobalSymbols\n\nexport async function getStaticProps() {\n  const {\n    default: {\n      title,\n      description\n    }\n  } = await import('@/site.config');\n  const aboutPath = join(process.cwd(), 'src', 'content', 'about.mdx');\n  const fileContent = fs.readFileSync(aboutPath, 'utf8');\n  const {\n    content,\n    data\n  } = matter(fileContent);\n  const mdxSource = await renderToString(fileContent);\n  return {\n    props: {\n      siteTitle: title,\n      siteSubtitle: description,\n      aboutTitle: data.title,\n      aboutDescription: data.description,\n      mdxSource: mdxSource\n    }\n  };\n}","map":{"version":3,"sources":["/Users/IGassmann/Developer/IGassmann/personal-website/src/pages/about.js"],"names":["matter","join","React","fs","Layout","renderToString","hydrate","AboutPage","siteTitle","siteSubtitle","aboutTitle","aboutDescription","mdxSource","content","metaDescription","getStaticProps","default","title","description","aboutPath","process","cwd","fileContent","readFileSync","data","props"],"mappings":";;AAAA,OAAO,KAAKA,MAAZ,MAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,YAAb;AAA2BC,EAAAA,UAA3B;AAAuCC,EAAAA,gBAAvC;AAAyDC,EAAAA;AAAzD,CAAD,KAA0E;AAC1F,QAAMC,OAAO,GAAGP,OAAO,CAACM,SAAD,CAAvB;AAEA,QAAME,eAAe,GAAGH,gBAAH,aAAGA,gBAAH,cAAGA,gBAAH,GAAuBF,YAA5C;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAG,GAAEC,UAAW,MAAKF,SAAU,EAAhD;AAAmD,IAAA,eAAe,EAAEM,eAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OADH,CADF;AAKD,CAVD;;AAYA,eAAeN,SAAf,C,CAEA;;AACA,OAAO,eAAeQ,cAAf,GAAgC;AACrC,QAAM;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAX,MAAsC,MAAM,OAAO,eAAP,CAAlD;AAEA,QAAMC,SAAS,GAAGlB,IAAI,CAACmB,OAAO,CAACC,GAAR,EAAD,EAAgB,KAAhB,EAAuB,SAAvB,EAAkC,WAAlC,CAAtB;AACA,QAAMC,WAAW,GAAGnB,EAAE,CAACoB,YAAH,CAAgBJ,SAAhB,EAA2B,MAA3B,CAApB;AACA,QAAM;AAAEN,IAAAA,OAAF;AAAWW,IAAAA;AAAX,MAAoBxB,MAAM,CAACsB,WAAD,CAAhC;AACA,QAAMV,SAAS,GAAG,MAAMP,cAAc,CAACiB,WAAD,CAAtC;AAEA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACLjB,MAAAA,SAAS,EAAES,KADN;AAELR,MAAAA,YAAY,EAAES,WAFT;AAGLR,MAAAA,UAAU,EAAEc,IAAI,CAACP,KAHZ;AAILN,MAAAA,gBAAgB,EAAEa,IAAI,CAACN,WAJlB;AAKLN,MAAAA,SAAS,EAAEA;AALN;AADF,GAAP;AASD","sourcesContent":["import * as matter from 'gray-matter';\nimport { join } from 'path';\nimport React from 'react';\nimport fs from 'fs';\nimport Layout from '@/components/Layout';\nimport renderToString from 'next-mdx-remote/render-to-string'\nimport hydrate from 'next-mdx-remote/hydrate'\n\nconst AboutPage = ({ siteTitle, siteSubtitle, aboutTitle, aboutDescription, mdxSource }) => {\n  const content = hydrate(mdxSource)\n\n  const metaDescription = aboutDescription ?? siteSubtitle;\n\n  return (\n    <Layout pageTitle={`${aboutTitle} - ${siteTitle}`} pageDescription={metaDescription}>\n      {content}\n    </Layout>\n  );\n};\n\nexport default AboutPage;\n\n// noinspection JSUnusedGlobalSymbols\nexport async function getStaticProps() {\n  const { default: { title, description } } = await import('@/site.config')\n\n  const aboutPath = join(process.cwd(), 'src', 'content', 'about.mdx');\n  const fileContent = fs.readFileSync(aboutPath, 'utf8');\n  const { content, data } = matter(fileContent);\n  const mdxSource = await renderToString(fileContent)\n\n  return {\n    props: {\n      siteTitle: title,\n      siteSubtitle: description,\n      aboutTitle: data.title,\n      aboutDescription: data.description,\n      mdxSource: mdxSource,\n    },\n  };\n}"]},"metadata":{},"sourceType":"module"}