{"ast":null,"code":"var _jsxFileName = \"/Users/IGassmann/Developer/IGassmann/personal-website/src/pages/blog/page/[blogPageIndex].js\";\nvar __jsx = React.createElement;\nimport PostFeed from '@/components/PostFeed';\nimport Layout from '@/components/Layout';\nimport Pagination from '@/components/Pagination';\nimport { getAllPosts } from '@/lib/api';\nimport React from 'react';\nexport default function BlogPagePage({\n  siteTitle,\n  siteSubtitle,\n  posts,\n  currentPage,\n  numberOfPages\n}) {\n  const pageTitle = currentPage > 1 ? `Posts - Page ${currentPage} - ${siteTitle}` : 'Blog - siteTitle';\n  return __jsx(Layout, {\n    pageTitle: pageTitle,\n    pageDescription: siteSubtitle,\n    isIndex: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(PostFeed, {\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), __jsx(Pagination, {\n    currentPage: currentPage,\n    numberOfPages: numberOfPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n}\nexport async function getStaticProps({\n  params\n}) {\n  const pageIndexParam = params === null || params === void 0 ? void 0 : params.blogPageIndex;\n  const pageIndex = parseInt(pageIndexParam || '1');\n  const {\n    default: {\n      title,\n      description,\n      postsPerPage\n    }\n  } = await import('@/site.config');\n  const posts = getAllPosts(['title', 'description', 'category', 'publishedAt', 'slug']); // For pagination and ordering\n\n  const numberOfPages = Math.ceil(posts.length / postsPerPage);\n  const zeroBasedPageIndex = pageIndex - 1;\n  const paginatedPosts = posts.slice(zeroBasedPageIndex * postsPerPage, (zeroBasedPageIndex + 1) * postsPerPage);\n  return {\n    props: {\n      siteTitle: title,\n      siteSubtitle: description,\n      posts: paginatedPosts,\n      currentPage: pageIndex,\n      numberOfPages\n    }\n  };\n} // noinspection JSUnusedGlobalSymbols\n\nexport async function getStaticPaths() {\n  const {\n    default: {\n      postsPerPage\n    }\n  } = await import('@/site.config');\n  const posts = getAllPosts(['slug']);\n  const numberOfPages = Math.ceil(posts.length / postsPerPage);\n  let pagePaths = [];\n\n  for (let index = 1; index <= numberOfPages; index++) {\n    pagePaths.push({\n      params: {\n        blogPageIndex: index.toString()\n      }\n    });\n  }\n\n  return {\n    paths: pagePaths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/IGassmann/Developer/IGassmann/personal-website/src/pages/blog/page/[blogPageIndex].js"],"names":["PostFeed","Layout","Pagination","getAllPosts","React","BlogPagePage","siteTitle","siteSubtitle","posts","currentPage","numberOfPages","pageTitle","getStaticProps","params","pageIndexParam","blogPageIndex","pageIndex","parseInt","default","title","description","postsPerPage","Math","ceil","length","zeroBasedPageIndex","paginatedPosts","slice","props","getStaticPaths","pagePaths","index","push","toString","paths","fallback"],"mappings":"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","sourcesContent":["import PostFeed from '@/components/PostFeed';\nimport Layout from '@/components/Layout';\nimport Pagination from '@/components/Pagination';\nimport { getAllPosts } from '@/lib/api';\nimport React from 'react';\n\nexport default function BlogPagePage({ siteTitle, siteSubtitle, posts, currentPage, numberOfPages }) {\n  const pageTitle = currentPage > 1 ? `Posts - Page ${currentPage} - ${siteTitle}` : 'Blog - siteTitle';\n\n  return (\n    <Layout pageTitle={pageTitle} pageDescription={siteSubtitle} isIndex>\n      <PostFeed posts={posts} />\n      <Pagination\n        currentPage={currentPage}\n        numberOfPages={numberOfPages}\n      />\n    </Layout>\n  );\n}\n\nexport async function getStaticProps({ params }) {\n  const pageIndexParam = params?.blogPageIndex;\n  const pageIndex = parseInt(pageIndexParam || '1')\n\n  const { default: { title, description, postsPerPage } } = await import('@/site.config')\n\n  const posts = getAllPosts([\n    'title',\n    'description',\n    'category',\n    'publishedAt',\n    'slug',\n  ]);\n\n  // For pagination and ordering\n  const numberOfPages = Math.ceil(posts.length / postsPerPage)\n  const zeroBasedPageIndex = pageIndex - 1\n  const paginatedPosts = posts.slice(\n    zeroBasedPageIndex * postsPerPage,\n    (zeroBasedPageIndex + 1) * postsPerPage\n  )\n\n  return {\n    props: {\n      siteTitle: title,\n      siteSubtitle: description,\n      posts: paginatedPosts,\n      currentPage: pageIndex,\n      numberOfPages,\n    },\n  };\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport async function getStaticPaths() {\n  const { default: { postsPerPage } } = await import('@/site.config')\n\n  const posts = getAllPosts(['slug']);\n\n  const numberOfPages = Math.ceil(posts.length / postsPerPage)\n\n  let pagePaths = [];\n  for (let index = 1; index <= numberOfPages; index++) {\n    pagePaths.push({\n      params: { blogPageIndex: index.toString() },\n    })\n  }\n\n  return { paths: pagePaths, fallback: false };\n}"]},"metadata":{},"sourceType":"module"}